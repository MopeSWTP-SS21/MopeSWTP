plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id "org.sonarqube" version "2.7"
    id 'jacoco'
}

group 'thm.mope.lsp'
version '0.1.0'



repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.12.0'
    implementation 'de.thm.mni.mote:omc-java-api:0.3.6'
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'
}
task startMopeServer(type : JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'Server.MopeLSPServerLauncher'
    standardInput = System.in
}
task startConsoleClient(type : JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'Client.ConsoleClientLauncher'
    standardInput = System.in
}

shadowJar {
    //mergeServiceFiles()
}

task shadowServerJar(type: Jar, dependsOn: shadowJar) {
    archiveBaseName = project.group
    version = project.version
    archiveClassifier.set('Server')
    manifest {
        attributes 'Main-Class': 'Server.MopeLSPServerLauncher'
    }
    from zipTree(shadowJar.archiveFile)
}
task shadowClientJar(type: Jar, dependsOn: shadowJar){
    archiveBaseName = project.group
    version = project.version
    archiveClassifier.set('ConsoleCLient')
    manifest {
        attributes 'Main-Class': 'Client.ConsoleClientLauncher'
    }
    from zipTree(shadowJar.archiveFile)
}


test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled true
        html.enabled false
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "MopeSWTP-SS21"
        property "sonar.host.url", "https://scm.thm.de/sonar"
    }
}
